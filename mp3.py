#WM:Dika Vrikitiw (Jangan Dihapus)
import base64
exec(base64.b64decode('#WM:Dika Vrikitiw (Jangan Dihapus)
import base64
exec(base64.b64decode('I1dNOkRpa2EgVnJpa2l0aXcgKEphbmdhbiBEaWhhcHVzKQppbXBvcnQgYmFzZTY0LCBtYXJzaGFsCmV4ZWMobWFyc2hhbC5sb2FkcyhiYXNlNjQuYjY0ZGVjb2RlKCdZd0FBQUFBQUFBQUFBQUFBQUFjQUFBQUFBQUFBODRBQUFBQ1hBR1FBWkFGc0FGb0FaQUJrQVd3QldnRUNBR1VDQWdCbEFXb0dBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBZ0JsQUdvSUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQVpBS3JBUUFBQUFBQUFLc0JBQUFBQUFBQWFnc0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQ3JBQUFBQUFBQUFLc0JBQUFBQUFBQUFRQjVBU2tENlFBQUFBQk9ZZndYQUFCUmJIQnZUMVJHUWxkVFdsUlhXbGhPWTFablFVRkJVbVpuUlVGUlUwOHpMemhxTHk4dkwwRXZMeTh2ZDFsQk5pOVhNM1owTTFCeVptUnVTamMzTjNJMk1YWnVibTVsZG5WbVdtNHpaU3NyTWpkdVdqRTRZVGczZFRsdEsyeDJjemdyZGxoNmVuVXJPVGw2TTA4cmREZFVjR2x4Y1dWNlJUQjVUVk5sUTFsdFFrMUZlRTFVUW10NVFsSlVNVkJWWm5GdFRYRnVMMjh3VGxSRmQwVjNiVUZGTURCNlVVRkZXazVKVlRCRVVUWndMMjh3ZUhGdU5tMVVRWEEyV1VFd01IbENUVzFGZDFSRGNFUkpRVFp3TDJsbGIxbFNhSEJ2ZVU1SGEzZHdObGxoVVZsdGFrSkpiMEV3VFhCelZGSnpSazV2TUZSRFlWcE5RMXBOVlRodFZFcHBUa1ZuUVU5d0wydE9UVkV3UzI1d2JVWlFNVTVIUlZwT1RrMVVTbWxoV1VwUllVNU9RM0pFTDNWc1puZGFTakF6YWxWME9HVkJRMU5hUTNSRWFVTXZabWxvTTFkdk5FZGtTSG92U1VWTWRFTm1hVVF6UTBoNk5uSk5WRTlXYjNrd09TOXNSbFl6ZG1ZdllrVnlNM05DYmtReVJraHVZakpLUW5BdmMxbDJkbTkzUzJKcUswNXRkWEZ1VUhSQlIyaHNMMGgyT0VwMmNuSkxabFJMUm1KU1FXUnZVMDk2TkRsaldDdHNLMUF6UTJWeVVIbFhjRWwzTHpOSWNIcFRhek5aTDJNeUt6TTBTQzlNUkZCQ2FERXlaa2xDUXl0WFZVSlRVWHBXZFd4ellWVjNjbUprVW5GV2NpdDFSM0JJY0hnM1FscG5LMng0T1VWeFlVUmlNemxoTUhGMk1FczVaelJaZDJWNWFGbHhWR2hyYmtkWVJFZFZNMGM1UzNBeVpWSkxVRzFWTDBKUGREWjNhM2c0ZWtGSWIxRjRkbWR6THpFNVR6bFViemRWTkRkUWJuaHFSRVJ5T1hCYVVUWlVXR1JKUTNSQ05WUnVWVlpOZWpkRk1VcE5jbmRJWjFwc2MyaG9hMHN4TVhkMlVUVmhlRXhGVWt0NGRWbGlVVGxsWWxwckswUmFkbFU1ZWt4RVFtdHZZME5CYkZSaWRYUXZVMEV3YXpseGJDdGlSbGhIWkVSVmJYcFpUR1ZRVERnd1ZHNUJWMnBLWTFsemVXNWxPRmsxTkN0TFRVdFBSVzFqZEV0UVRETlFZakJ1TUhOS1VXdzJVRkU0WTJJdlRGTldRVEpMT1cweFRHTmtSaXRPVmt4aWFGbDFSbWR6WW1NM2RuQmtaa3Q1WmxobkwwcEJiRXBqYlhwaWNtSTVXVGx0YVN0S2IzaG9TeTlOU0hSUUszbHBaV2RMUTFFeGMzaEtZbWszTlUwcmEySkxOalpPTXl0VlozQnpSbGRaUnl0WmNHUnpObTVKVTI1UU5EQjFLMmhrS3pGeE0xaDVWVUl5VUVGRVFWa3JPRTlzYTNWUGRsWlVhbTE2YkVoM2FHdzFNRzh3V21oVVozSkRUV2hsVFZCbFVrbHRSamhSYm5aVEwyaEtha0ZLTDFoemJGaERaSEYxTjFKVFl6TkRTRXgwVWxaTVlXSnhRV3R4YjBJdmJIRktaREY2VkdodFRHNDJTVnBxVldGeVpsQnVRalpxTXpaTE1HcDRNMEZUV2xGR1lUVkVhR3htWlRKU1UwRkVSbkZUTUZkVEt6Vk5WM0JZYUc1RFZraFhkV2RSWWxSTU5IVXdXbHBsVFVweVowY3ZVR296ZFVkYWVrNVdPV3BxV0dGc1QxaE9Ua0ppZEVzNFNEWkhSMUF6TkZKYWNGTnFWa1F3WWxkaE5uTkxVR1F6TldsNGNrbFpRelpLT1hKelMzRmxaVVp5ZG5sbFVIcFRlWFYzWW5KamFtZDBUSEJyVDNrNWVVWk9Wa2MzVlVJeVdXNTFjVmgzWWtaMGVFUjJjakZaTVRkNGJrTlpkbXAzZFdSemJYTnZkbmsxWlVOamQwUlFVbXB5WmtoaU5tMUdjVWd3V25OTk9VSkpZbXhGZFhSSFNtcE5kRmcxTWxCcVIycExjamc1WWpJdmJ6QkZaa3hFZFVaNVNHcFNPSEE0WmtadFNqTkxaa0l3YjFaM1NGRXliSGwwTTNWRmVWaHRORmxvV1ZWVFRVOU9ZblJEVGxObFpHTTVkRXRFTVhKTVoxbzNlU3RRU2xwVE5rWTRVamxuY2xRM1JXWnVaSGQyTlVrclVVZEROVkJ5ZEROelN6WndVVTAxVGpkcmQxbEJNRmxWY1ZsWmRpOVZRMnRhVUZveUwzWnlXVnBGTkZsUFZ6aG1Za3hUZVV0bFN5OXlhbWt5VVhkQ1pubEJaMjlITmxWT1FtSkxjQ3RWZFVGaVYwMW9lamMxUnpKaFUzbG5NSGwyVlZaMWFHZE1ObmN5YWpadlZXSm5UVkJMWjJkWVlWSXJTSFpMZDBWcmJGcHpMMFZXV1c5bVdrNUhWVFJDV0RBcmJteHpOVEpXU0haV2IxSnVjR3RMWkhsalZteGlhMVJ0YTFGaE4yZHpVa1JyUTNoMlIwTkxha1poVDBzdlNtOTJaRmQ0ZUZOamFURnlVMDVrTURJdlYyMUlRVGh3TTJGdmMwWlhZblpUUW5kTlQwNXdWSEpKYmt4elVHOVpWVkJKZGxGRFJ6UjBSRzVXUVRaMWR6bGtSV0ZNVjJWWksxWlJlVU0xUmpabVNERnpkR0ZtVUZveWJXVjNXR2sxVkU1cVpqQkVOVU4xYlhKUU5YUnVjWFExTjIwdlFtdFZZWEpDWlhBelMzcGhXVFJsYmtsdFZrbzRaMng0TUVkVVZFRldMMFZKTkc5R1IyOTBlR0ZsVkhwaU1Vb3pWamN3Y0ROclNHNWxLMFoyUTNGWFRIcGFVVFJpZUZScU5YbFNNQ3RDYUZKalJWZzROWHAzU0hWVU1FUXlkblpITUZZek9EVm1OUzg0UzJGT1dHVnJWMUZHVlZOUWREbFBZa1JZV0ROaE0yWTRSQ3RIVTJSUFJsVjJWakZ1VlZocVUydHJjamhoYm5oRllYRlBPQzgwYnpBd1FWSTFTVWN4Y214UFJUQlljbUp4Y0dneWVXbDRVbUUyV0doRlJVcGpkbmhEV0ZCUFVXdHBTRlJ6Y0hkblJWQTJkMnAwU1VWSVQzWnNOVTlNZGs4eGNsWk1jbWRKVGt0b1dXcE5aRW80ZHpNclEyTjNUM2xUUmtONGRtZGtNMHRZTm5wSVkzRXZlbEJ6Y0cxV1Z6ZHJaMFphYW1wSFdHRXdjMVJqYURsMVFtSlBMMjFaYlRodGVuWXhNM1ZWWm1oNll6ZFJWbWhZZGxwbWNuSjRNMHgyUWtOcFMxaE5XRXBLVkRGbVUxZEplSFV2TkVSYVZsbDFPV2hEUXpWTldEQkVlWGQ1UmsxVEsyTk1iekpHT0RrNWRteFVha1JRZWpOSlZGTnliRlIzYkZWQlNUVkdZbTV4ZG5SMVkwdHhWMUo1TTNNNVNYVkhNVlJ4TlVoV1duZGlhMkoxZUhOT05VMXNZMkpRZFVsMVJpc3ZiWGRYSzJGSmVEZHdjWEZ3VGtoVlkxWlpVbFZFZGxOVU9HcHZZWGN5TnpGclRVdEVjRGN2WVhRdlMwZHZlV2g1WlhaRWNEWk9aV3A0U0VWM2RWTnhObGQ0WmxCdVRqY3hObXByU2taTVQxcHNRa2xRVTFaclEwWjFka1UyWVM5aU1ETXdZamRUWkc1UlZqTkpXREpPWlVWR2NXaEROR3cxU0dWaVdFWjFPVVI0YUVoYVVVZHRaMVl6TVVSUk9XMDRZbVpPUVhBMGFsUlVSemxWWjFsa1drTlJiekZoUkU5TVEzSXhRbkJGUm5KdWJFcG1iMkpJUjNOTmRIVjBTVTAyY0ZaUWJVODBlVWRtVEVJM1ZFRk1hMHMwTHpKelJUTlFXblpZUVhneVVrTmxiME5wWm5WR01qVnViekY2V2pCYWFFVldXRWs1WWxZNGJXTm5NVXQwYkdneFVVWTVXSEpEVTFFMVYzTTRZMFkzV25CS2VUVXhMMlZJYlRkT2VVVjBXVzFpVDB4WU1uRnpaSGhoV1VNcmJrTkpWbk0yU1hSRWJqVXdVVUo2UkVGcU1XVkhjbXhYYTFwcU9VTm5ja3RhZFdaelduRnNUR3M0WkhRck1tNVliVGxrYkdaemFsZzNhMVkyUlhKVFFsTlFVelJtWVV3elRrVlNPVmMzTDFSTVl6WndkVk50WnpaWGEwRTFURWhqWVhock5VeDZWa1ZSU0U0eVZrRlNXWGRzTWpCMmRVSlJkMFZTZFVGUWNUVnhTbWxwVFU1VU0wZFNTR0Z3VldFNU5XSnlZVlpWZGpGMFJraHpTblUzVUZGYVJIUnVlVVZUTVZjMFJuSnBjbVpIU1VjMlNIWnhkV042WTNObFFUSk9jVlpVZUZKWWQxaGhaR3hrTjFoM1MxRTBSMVIxVkhOMVRsbExjRGx6Ukd0cmVDOVFhV0oyTkhoVFRqZHllRE56U1VSamNYUmhUVVJyZFdSa1IzQlFNVVpXWlhoSVdtOHlUVzFIZDBKa2N6bGhRVTU1WlVWM1NXOVlWVGRVVTFoaGNIUmpNMFJQSzBSUVJEQnNRamQyV1hrNVExSjZRVTgwU1dGeGVUbHdXakJvVlRSU1FuUXdVa0psYWxWSGFXb3dZalpRVG1oUFUyRnpZblZsWTFReFZGSjRhalJ0ZG5STlZIQlVjVEJQV25GdFZHbFhaVzR5YkZwUFptVnNTR1pTYUVKMmMzUnRhMFI1VVhSdU1qUkRRbEJxTUZWRlVtZEZTRUpQT0dWWFZEVlhNRVpYVVRWdGQySnBSVVIyY0hWMFZtbHdUakprVDNwUU1VVnlhME5PUVZaTWRuVjNhMFJJWTB0UFp6UlpSaXRvV0dJeGJIUm1XVWd4YTNselJIWmFWSEI2Tm1wMlFWUkJLekZSVFdOUWFGY3pWRlJYY1hNeFpESXlTWEF3THpOSmRraHJOWFZOV2tnMFZFVk1Xa1ZpTkU1T1RIbE5kemxWUTNvNU5WQXlUSEpMUTJKNE1rOXFla0Y1TlZOYVduUnlORkJPZW5SRllrWk5aalZtYVRSRlpGWlJaa1pCUTJsR1lWcHpTemt2U0dKMmNsUnpXSGwwVEVodldITXlObTlVU201S09EbE5XbWxsUlRsbWRHTk5RMjV2TVZoU1dFOUdZWFZ6U0ZZMlYxcDFZVk5VWjJseE9GSktWVW81WW1ob1drMDNWMlZsVldWbVpHNVhla2RJVEdsMVZqTnBTamc0UzFnNU9YSnVjVmhHVDFsTmIyVmpSMEpMUzFWM1MxQnpTWGx6U0VweWRsUmlWakZ3TkdOM2MwNTVhaXRvVTBoTGRVSXZTR0p3T1dkU1prSmhMekJSS3pKMmRsUm1lbWx6WkdwcWVqaHRjV3MwZFRsWk4wbE1RMUU0VGxGYWRtVlJVRkZvV0VkS2FUVk5ia1pIWmtaVFJUWndkR2x0V0ZGa0wzQjVhMDAwVDNoVVMwVkpNV3M1TUdweGRHbHNkbGxSZUhOTU9XbzVNRzh4VGtsc2RXdDJkbnBtUlcxVGNHMVFUVGR0VDJSS1RuVlVZVTl3WTNBeVprdFViVXR2UW1rMU1HOVVUblJPZFZkbldHZHBRV3g2Y1hJemFUY3dNM0Z2YzFsRGFFVkxOVTkwZEdoaFMxUldWRmxhT0ZacFNVUm5iM0J3YVVod1l5dDZZMVYxUnpKeGNtOXFURGhGVW5WaFNuWmxZVmMzTkVSWU1uVlVVbGMxZVdkeGNHeGhTMHBsYWxVelZrdFNiV3RKUmxWTGFsUnhSVlZ6YmxvelR6RnRSMlpOZVU1MEt6Z3pPRWh3TXpoRFpUTlpUbHBIYVhSUVltMXZjVk5ITW10cU1qZHdWM0UyV2paYWFsTlNUak16V2lzeFpsUndOR0UzY1U1TGVYWm9VbTFIUzNGT2JrOXhaekZLV1RCTU9YVXJVMDVvZWxOTFN6UlNSMUJTWkZCblYwOVRSMHBvSzBkb0t6UlhhR1ZLUTBVdlQxRXpMMmxoWTBwMVZUQXhOeTlPYUZObmIxTkhNM0EyUzNsVlNIcFJRM1ZKTldOcFNYbExOelkwUkd4amNFbFRXRkUwV0VRNVJYcEJWV2RoZVdsTVZ6aGFNMU5HWlVGTk4xbHpaVms1TkdSR1dXWjBjR3haTWl0MFEwNVZibXQ0UzBoMVdVUk5Lemx3ZFhKQmJFTkxRM05LVlRsaU9UVXJUWGRQUkRaelNYYzNNMFp2TTFSNlpsa3JWWEJVZDI5ck9EazJLMFZzYzFSVWJWQjFTRW8zTjBaeU1rdERWV3BPZGxseVRtUm1jVWg1ZUZCU1pVdDJURnB2UXpBM1ZrSnJWbXAzTjBsd2RrWndZM2hQY0ZBMlowNXJlblV4ZGxGTVpWazJPVTlSY2toSFJpOUxZblZHTWxCbWRVMU9kVUZsYkdGdlIyZERlVFpGUmxSVmFIVm5lRzkxVjNOTk1FcFZRMHRMUXl0VVNYZzBaMnh3Y1ZaQmJuWnZWa1p6ZDNWdE4zSmlPR1JyUnpWRGJtZFJOa04yVkVkdWJWaGhLMHR6TVZsT2NrY3dVbUpEUTJGM1VIaHRlbXA2VWxORWNYWlVhMFJUS3pGS1QyNTJhMnBwT1hOSVNtcDZSSGxYY1ZCeVRsY3JNMFZJUlRaM1RtZHlORkpXYzFJMU9HVnRkMkpTYzNvek5pOXlkV0pTZGtnelNtZFlTREZ0UjBsdVUzUm1NelJMYkdoM2R6ZHNPVk5MZFZCaVJFUmpLeXQxV21JeFZuRllibXBIV200NUwyeFhiMFV6TDJzNE5rSm1hM2w1Wm14dFpsbHhPV3hJZVRCdllqWlJSRGxpYlRGd2RtdDNkbll4TWxOdGVEZHpUV2htVGtkdVNGSjJhSGhRU21kcFduWlJWakY1SzJKSlptMXJhMHhtU3poeFUzaGhZMXBpVERaWE1uWjJLMGhMYUVoNmJVUndlbko1VWtJMlptZHJjMlp4VjNoMVRsaFZablZsU1VrdksyODJRVnB5UnpKbFUyNXNSbXQzT0ZSUWFIcE9XVzF2ZWswME1XUjBja3BVVWk5VE9XYzRaVkZOUXpsMGQySjNVRmhRVUc1aVpGQlZNRVF5YTJ4a2ExUlpUVFZVVUhZM1FrZFlWa0Y2VVRSeE1WUk1SRFpOUlRCVE1tODFURnA1VEZKSWEwUmhOM0I2U1RkNFdrNTZSR054WVVSMVREWkpZa3RWY0ZOd1kzcEpVbXBvSzNGWWRISnpZa281WkRWNE0zTnhSbEpCTUhaUlNtUlVTR3h6UjBSaGFqTTVjV2Q0ZVhkbVpEQmpSamhUWms5dFIyOVlWa3BRWld4RkwwWnFZMUprY1dWUlFrNXBlSG92ZGtkeGN6UnBWa2xPUmxwWVpIY3lNR2MyZVdJd2VtOHZWMHB4VUhFeVNGUmxSRFJhVEZaYVdrbDFSSE50ZEhnNVVXMUlSekZLVFRoYVlYZDFVVVl4ZFRsaFN6VkZTaXRKY2tsak9XTlVTVVo2V0hGaU0wRk1NVUo2Tm1FclNFbFdWbXR0UVRkdk1GTnZaRU5vWmtSaGNXdHJNMlE1VTJKNFRUUnlRMWh3Y1dKVk5VZHlZbXRTWnl0dlpHOXlabUpOWm1KNVIxZFVaRkZGTHpWVGNHUjZNMjlNYmxkeWRIUnBhRk5tUlRsa1pFOXBSa2N4UTNOMGMxaEdlVFJvU1VKaFducDNTMFp1T1ZNeVZUSk1SVWhqTTJnNWVWUTNXa1ZyUnpOTmJuaFRNalpsTkV0WldrNHhjbmQzYzNCTFdWTXdaRk5PUVdwblkxUnFZemREVUdaMlRtVnBMMVkwVUVwU1FrMTBXbk5DWTBKa1oyaE5kRnBHT1N0bVlXSndORXhMTTNweU9UWTRaVGQxWTFKR1pUTkVWV1V2VTJWV2NIQXdlRmc1WmtKVE5sZ3dkbE42TVRWdlJVTndOMmRwVVVsUE1FeFBOU3QyZERka1QwTm9kRXczVTBKc1dtZ3hkM2M0YWs1bGVHMXRRMXBSYjBkeFRuSmxZblZZVVU1SmNtbHdhamRoVGpVemEySXJNa0pJWTNSSmVtZDVOVEZ6Y3l0V2FrZ3pWa3hqWmxOMU0zUlVOazF3WkRWS2RtdEJVVkZOYzNkTk5TOUhTMnBoZEZWR1RDOUJXWGhGWnpKUVZuZFROV3RZT0hjNVFqVmlSQ3RpTW1GeVNITkRiemhzY2pKeVoyTk5iMXBrVmtsNksyTTVTMU5uVmtnM2JWTXJiblZITkRKSkwxSk5MM2N4V1ZwR1FubGpZMWt6VDNkWFJEaEtlbHA0TlUxNGVtVlpjR3RwYmxwMWVUSlhNRU0yVFRoUGN6TkRWSEowZVRsTU5UaG1SVFJFY0doUmNGcGhhRW96ZUd3MlNUWnRUamhNV2pWNFRYTmhSakpuVVhKS1NXUnlNMWx5T0RGYVoyRnhTVUpxWWxsTmJTdEpWVkprTm1aV0swdEZObWhxY2pKUGRHa3JjMkZ4UmtaTlJIZzJUREZLVlVaNmJVMTRMMUV6YkZsc2FrczNZV2RyU1c5T1dWTlZUa2gwV0d4aFJEWlRWRFZ2YjAxNE5XNTZRVkJpVFRkTFZXSjViM1ZJVjJoaGFuVm9OVnBEZUZORGFqSjFhMVpvT1N0bGJWRnpWWE1yUzFodWNHMHhVMjlHU1hCM1RuSklLMjU0TURsT1p6UnJWazFCYUhOUmJ6RjNiazVOV25kSFNHSmhkM2RhYlcxb1p6Snljak00VFN0c2QzaFBSWGx0VTAwMFRHcDRabXh4WjBJd2MxZG1ZMHg0YmxoT01YUk9NazVaYldGVVFWUldOWHB5WnpKNk5IUmFTV2xyWlRSS1luVkxXRTF0Vnpoc1drMTFka1pFZUdnMlMzbGlZMnhLY25WTWFraEVZVXhqY1dodVZUWTJiWEI2ZDBGTk5qaG9WSHA0VlZkeGFsVlVTMDVqUW1kS1lrcE5XRWx3VDFOSk5FTkhVSGQ0ZWxGSk4xaHBURmhKY2tKaVZua3JPU3R6WTBaUVltRmtNRWQ1VVdGeFJtRjFSRFpMYlVGaFJYaHJaV2QxUWpkaFIwdGxaemRqTkRaUFYxcDRXRlpTTVRseFdDdG9Oa29yT1UwdldIWjNNR1owWm5ZNFEwaFJkVmRKWXlzMlJHbExRbkZzVEdoVlQzTnpVRTU0V1ZKTGRXTnFNVW8zU3pFMlNHZzJhbWNyTkVWUkwyODJhRmxtVmxrM2JYVjRWSFJhUmtORFpVRjBka0pLUkhSdk16UlhXV055TlhCd2JEUnVNRVZ2T1drNFRqUkNSaTlNZVVRd1VFUkRWVXQ2TTFWTlVpdFdXRzVoVDFkSVZWSkNkMjEwY0RCWVlraDFZbVZzVUZsWFpIUXpSbFUxWWpobGRIZHJkVVJqUldGWmMydHVURVpIU1ZSME1pdDJWRFkwWjJ4UWVraG1SWGR4VDNoc1ZUVlJkMkpXV1ZoT1ExaEpWamhpUVc1ek55dFFTV0U1Wkd4cVQyMXJXRzB5VlZsMWFsQkJTRnA0V1ZsMFkwOHdXak5UTldaSk1FcHRXakZGZFZNMWRVTmxUM2R2UTBkd2NsSlRVRE5ZTDBwcVJ6aG9NRWRaU1U1SVIwbFdVV01yT0RZeGNXNTVhemc0Tm01S01WQnFUVE5vVFhKYVVYVmxlWE5YVld0MWVuRkJjVzlvY0dKMFRtVTFSa1JIVjFGMGVVeFBRMnR2WTNsM1JtbHFlbkJpT0hOTk1YSkZXalYwWVN0Q09GQnRhblJuVVhCYVlVTTRjazlsZFhKNVIydDNURUlyTm5aTlNITkllVTVsYW0xNlRUSlNVekZDY0hKVmFtaFZhbVU1T0dwcmNteFdUVzlUZEhWSVltNXdjR0pIZEhONGFuZGFNMU5FVjFKbFNEWXhRbU5pU25GTmFqUldORVJOWjNWMlF6ZDVZbTk0Um5sQ2JYTjRNM1pWTjJSdmJtRklRVGR1TUd0amJpdHNVMHhFUVc5d2IySlNTVlJhZEVVd01sTkxPVkpGWVRGYVUwbGFOQ3RXVVdoc1ZXWlZjVlV4Y0hwUU4yZFFkV040ZEdFNU1HeDRUMGxzYVhZNWNESXZTVVVyY1VJM2JuTk9hMlpQYW5KM04xRXhkRVZzTkZGRE1EVjZObFY1UVhwUVIwSjVaV2xGSzNablpuaG1SSFIwUjJwNU1HNUlVRUV2U0ZoVWEwcDJkMFZNY2pkelRGWTJkRTlqZW1wdVJ6Rm1kMnB3ZW1Sa00wRTFTRXRuUm5aRFJGQjNXV3BUUzNCbVpGSTJhbFZ3VTNka1RtOTFSa3hMU1dSNWIyeDRXRVYyZERRemRtNVpNelEzVGpaUk4xSlBTbmxLSzBscVdITnhUMnMyWm5OeWJuaDZlbEJJY2pOcE5sZzFaeXRKVkVoNVdVVllWbGx6TkU0emVtTlhTVW92YjBveVIxUkxaVWhpY2s4NGNUWjRhemhGVFhKM2F6UnhNVTA1U1RSM2QyNUJjRzgxTmtSeVZETk9lVUY0TUVoRVYyRTVUMkpVVHpWSWQwaDNlSEJoZVRONmN6WkRSbE5qYm1WTldISldabkpYZURocFZtTmpPVEZyVTJ0Q2VXOW1aMHB6VkZWdFYxSlNZVVIwTWxGSlZsRmpRVXhwY25CTE9DdG5VR1phUlVoRFNETkJkbmRWZDBKTGNtRlBUa3N3VTBKc016UnRTR014WVdWVFlrSTRPRTlsY21oMWJFNDRWekJsUW5SWWNIWXZSak5LUms5R1ExRnNZekY0VjBFOVBTa0cyZ1ppWVhObE5qVGFBMko2TXRvRVpYaGxZOW9LWkdWamIyMXdjbVZ6YzlvSllqWTBaR1ZqYjJSbDJnWmtaV052WkdXcEFQTUFBQUFBK2d3OGIySm1kWE5qWVhSbFpEN2FDRHh0YjJSMWJHVStjZ3NBQUFBQkFBQUFjMDhBQUFEd0F3RUJBZWNBRXRrQUJJQmVnRk9IWG9GZTBCUWtrRWJYRkNUUkZDVHdBQUFtWkdBQjh3QUFGV1ZnQWZNQUFBWm1ZQUgzQUFBR2JXQUI4UUFBQm0xZ0FmTUFBQVp2WUFIMUFBQUJjR0FCY2drQUFBQT0nKSkp').decode())').decode())